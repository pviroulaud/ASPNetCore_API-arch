apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f mssql.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: mssql
  name: mssql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mssql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f mssql.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/dockerkubernetes-default: "true"
        io.kompose.service: mssql
    spec:
      containers:
        - env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: admIN123**
          image: mcr.microsoft.com/mssql/server:2019-CU14-ubuntu-20.04
          name: mssql
          ports:
            - containerPort: 1433
              hostPort: 1433
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/opt/mssql/data
              name: mssql-claim0
            - mountPath: /var/opt/mssql/log
              name: mssql-claim1
            - mountPath: /var/opt/mssql/secrets
              name: mssql-claim2
      restartPolicy: Always
      volumes:
        - name: mssql-claim0
          persistentVolumeClaim:
            claimName: mssql-claim0
        - name: mssql-claim1
          persistentVolumeClaim:
            claimName: mssql-claim1
        - name: mssql-claim2
          persistentVolumeClaim:
            claimName: mssql-claim2
status: {}
